{"mappings":"AAuBA,SAASA,EAAWC,EAASC,GAC5B,IAAKC,EAAOC,GArBb,SAAkBC,EAAeC,cAChC,IAAIC,EAAQF,EAUZ,MAAO,CARP,WACC,OAAOE,CACR,EAEA,SAAkBC,GACjBD,EAAQC,CACT,EAGD,CASyBC,CAASP,GAMjC,MAAO,CAACC,EAJR,SAAkBO,GACjBN,EAASH,EAAQE,IAASO,GAC3B,EAGD,CAEA,SAASC,EAAkBR,EAAOO,GACjC,OAAQA,EAAOE,MACd,IAAK,eACJ,MAAO,IAAKT,EAAOU,EAAGH,EAAOH,OAC9B,IAAK,kBACJ,MAAO,IAAKJ,EAAOW,EAAGJ,EAAOH,OAC9B,IAAK,QACJ,OAAOD,aACR,QACC,OAAOH,EAEV,CAOO,SAASY,EAASC,GACxB,IAAIC,EAAQC,SAASC,eAAeH,IAG/BI,EAAYC,GAAoBrB,EAAWW,EAF7B,CAAEE,EAAG,EAAGC,EAAG,IAsC9B,SAASQ,EAAYf,GACpB,IAAIgB,EAAQL,SAASM,cAAc,SACnC,SAASC,EAAgBC,EAAUC,GAElCN,EAAiB,CAAET,KAAM,eAAgBL,MAAOmB,IAChDL,EAAiB,CAAET,KAAM,kBAAmBL,MAAOoB,IAEnD,IAAIC,EAAYV,SAASW,cAAc,cACnCD,GACHA,EAAUE,gBAAgB,YAE3BP,EAAMQ,aAAa,WAAY,OAChC,CAoBA,OAlBAR,EAAMS,iBAAiB,SAAS,SAAUC,GACzC,IAAIN,EAAcM,EAAMC,OAAOC,cAAcC,UAE7CX,EADeQ,EAAMC,OAAOC,cAAcA,cAAcT,SAC9BC,EAC3B,IAEAJ,EAAMS,iBAAiB,SAAS,SAAUC,GACzC,IAAIN,EAAcM,EAAMC,OAAOC,cAAcC,UAE7CX,EADeQ,EAAMC,OAAOC,cAAcA,cAAcT,SAC9BC,EAC3B,IAOAJ,EAAMhB,MAAQA,EACPgB,CACR,CAEA,SAASc,EAAW9B,GACnB,IAAI+B,EAAOpB,SAASM,cAAc,MAElC,OADAc,EAAKC,YAAYjB,EAAYf,IACtB+B,CACR,CAMA,SAASE,EAAUC,GAClB,IAAIC,EAAMxB,SAASM,cAAc,MACjC,IAAK,IAAImB,EAAW,EAAGA,EAAWF,EAAOG,OAAQD,IAChDD,EAAIH,YAAYF,EAAWI,EAAOE,KAEnC,OAAOD,CACR,CA0KA,OA/PAzB,EAAMe,iBAAiB,WAAW,SAAUC,GAG3C,GAAkB,UAAdA,EAAMY,IAAiB,CAC1BZ,EAAMa,iBACN,IAAIZ,EAASD,EAAMC,OACnB,GAAuB,UAAnBA,EAAOa,QAAqB,CAC/B,IAAIL,EAAMR,EAAOC,cAAcA,cAC3Ba,EAAUN,EAAIO,mBAElB,GAAID,EAAS,CAEZ,IAAIE,EAAYF,EAAQG,SAASjB,EAAOC,cAAcC,WAAWe,SAAS,GAC1ED,EAAUE,QACVF,EAAUG,QACX,KAAO,CAGN,IAAIpC,EAAQiB,EAAOC,cAAcA,cAAcA,cAE3CmB,EAASd,EADIe,MAAMb,EAAIS,SAASP,QAAQY,KAAK,KAEjDvC,EAAMsB,YAAYe,GAClB,IAAIG,EAAYH,EAAOH,SAASjB,EAAOC,cAAcC,WAAWe,SAAS,GACzEM,EAAUL,QACVK,EAAUJ,QACX,CACD,CACD,CACD,IAmOO,CACNK,MA/ED,SAAeC,GACd,IAAI1C,EAAQC,SAASC,eAAeH,GAChCF,EAAIM,IAAaN,EAErB,IAAK,IAAIY,EAAW,EAAGA,EAAWT,EAAM2C,KAAKhB,OAAQlB,IAAY,CAChE,IAEIH,EAFMN,EAAM2C,KAAKlC,GACNmC,MAAM/C,GACJqC,SAAS,GAC1B5B,EAAMQ,aAAa,QAAS4B,GAC5BpC,EAAMuC,UAAUC,OAAO,aACvBxC,EAAMuC,UAAUC,OAAO,cACvBxC,EAAMuC,UAAUC,OAAO,eACvBxC,EAAMuC,UAAUE,IAAI,QAAQL,IAC7B,CACD,EAkECnB,UAAWA,EACXyB,OAvID,WACC,IACIL,EADQ1C,SAASC,eAAeH,GACnB4C,KAEbM,EAAO,CACVC,KAAM,GAENC,UAAW,GACXC,YAAa,IAEd,IAAK,IAAI3C,EAAW,EAAGA,EAAWkC,EAAKhB,OAAQlB,IAAY,CAC1D,IAAIgB,EAAMkB,EAAKlC,GACX4C,EAAW,GAEf,IAAK,IAAI3C,EAAc,EAAGA,EAAce,EAAImB,MAAMjB,OAAQjB,IAAe,CACxE,IACIJ,EADOmB,EAAImB,MAAMlC,GACJwB,SAAS,GACtBoB,EAAOhD,EAAMhB,MACbiE,EAAaD,EAAK3B,OAfH,EAe6B2B,EAAK3B,OAflC,EAgBnByB,YAAcH,EAAKG,YAAY1C,IAhBZ,EAkBf6C,EAAaH,cAChBH,EAAKG,YAAY1C,GAAe6C,GAGjCF,EAASG,KAAKF,GACG,IAAb7C,GACHwC,EAAKE,UAAUK,KAAKlD,EAAMmD,aAAa,UAAY,OAErD,CACAR,EAAKC,KAAKM,KAAKH,EAChB,CACA,OAAOJ,CAgBR,EAwFCS,SAjKD,SAAkBT,GACjB,IAAIjD,EAAQC,SAASC,eAAeH,GACpCC,EAAM2D,UAAY,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAIX,EAAKC,KAAKvB,OAAQiC,IAAK,CAC1C,IAAInC,EAAMwB,EAAKC,KAAKU,GAChBC,EAAa5D,SAASM,cAAc,MAExC,IAAK,IAAIG,EAAc,EAAGA,EAAce,EAAIE,OAAQjB,IAAe,CAClE,IAAIW,EAAOpB,SAASM,cAAc,MAC9BD,EAAQD,EAAYoB,EAAIf,IACxBoD,EAAwBb,EAAKE,UAAUzC,IAAgB,OAC3DJ,EAAMQ,aAAa,QAASgD,GAC5BxD,EAAMuC,UAAUE,IAAI,QAAQe,KAC5BzC,EAAKC,YAAYhB,GACjBuD,EAAWvC,YAAYD,EACxB,CAEArB,EAAMsB,YAAYuC,EACnB,CACD,EA+ICE,YAzKD,SAAqBpB,GACpB,IAAI3C,EAAQC,SAASC,eAAe,SACpC,IAAK,IAAIO,EAAW,EAAGA,EAAWkC,EAAKhB,OAAQlB,IAC9CT,EAAMsB,YAAYC,EAAUoB,EAAKlC,IAEnC,EAqKCuD,UApED,WACC,IAAIhE,EAAQC,SAASC,eAAeH,GAChC0B,EAAMzB,EAAM2C,KAAKxC,IAAaP,GAC9ByC,EAASd,EAAUe,MAAMb,EAAIS,SAASP,QAAQY,KAAK,KACvDvC,EAAMiE,aAAa5B,EAAQZ,EAC5B,EAgECyC,aA9DD,WAEC,IAAIlE,EAAQC,SAASC,eAAeH,GAChCF,EAAIM,IAAaN,EACrB,IAAK,IAAIY,EAAW,EAAGA,EAAWT,EAAM2C,KAAKhB,OAAQlB,IAAY,CAChE,IAAIgB,EAAMzB,EAAM2C,KAAKlC,GACjBY,EAAOD,EAAW,IACtBK,EAAIwC,aAAa5C,EAAMI,EAAIS,SAASrC,GACrC,CAMD,EAiDCsE,aA7BD,WACC,IAAInE,EAAQC,SAASC,eAAeH,GAEpC,GAAmC,IAA/BC,EAAM2C,KAAK,GAAGC,MAAMjB,OACvB,OAED,IAAIyC,EAAIjE,IACR,IAAK,IAAIM,EAAW,EAAGA,EAAWT,EAAM2C,KAAKhB,OAAQlB,IAAY,CACtDT,EAAM2C,KAAKlC,GACjB4D,WAAWD,EAAEvE,EAClB,CAGIuE,EAAEvE,GAAKG,EAAM2C,KAAK,GAAGC,MAAMjB,QAC9ByC,EAAEvE,IAEH,IAAIyE,EAAUtE,EAAM2C,KAAKyB,EAAExE,GAAGgD,MAAMwB,EAAEvE,GAAGqC,SAAS,GAClDoC,EAAQnC,QACRmC,EAAQlC,QACT,EAWCmC,UAhDD,WACC,IAAIvE,EAAQC,SAASC,eAAeH,GAEpC,GAA0B,IAAtBC,EAAM2C,KAAKhB,OACd,OAED,IAAIyC,EAAIjE,IACRH,EAAMuE,UAAUH,EAAExE,GAGdwE,EAAExE,GAAKI,EAAM2C,KAAKhB,QACrByC,EAAExE,IAEH,IAAI0E,EAAUtE,EAAM2C,KAAKyB,EAAExE,GAAGgD,MAAMwB,EAAEvE,GAAGqC,SAAS,GAClDoC,EAAQnC,QACRmC,EAAQlC,QACT,EAiCCjC,WAAYA,EAEd,CC5TA,SAAgBqE,EACfC,EAAkB,YAClBC,EAAe,CAAExB,KAAM,GAAIC,UAAW,KA+BtC,MAAO,C,KAxBP,SAAcwB,EAAgBD,GAC7B,IAAIE,EAAcC,aAAaC,QAAQL,GACvC,OAAIG,EACIG,KAAKC,MAAMJ,GAEX,CAAE1B,KAAMyB,EAAczB,KAAMC,UAAWwB,EAAcxB,UAE9D,E,QAKA,WACC0B,aAAaI,WAAWR,EACzB,E,KAMA,SAAcS,GACbL,aAAaM,QAAQV,EAAiBM,KAAKK,UAAUF,GACtD,E,aAMCR,EAEF,CC/CA,IAAIW,EAAuB,aCEpB,SAASC,EAAcC,EAAKC,GAmElC,MAAO,CACNC,OA/DD,SAAgBhG,GACf,IAAIiG,EAAazF,SAASC,eAAe,eACpCyF,EAAeC,GDed,CARP,WACC,IAAIC,EAAad,KAAKC,MAAMH,aAAaC,QAAQO,IAIjD,OAHKQ,IACJA,EAAa,IAEPA,CACR,EAbA,SAAuB3C,GACtB2B,aAAaM,QAAQE,EAAsBN,KAAKK,UAAUlC,GAC3D,GCDK2C,EAAaF,IAEjB,GAAe,SAAXlG,EAMH,YALIoG,IACHH,EAAW7C,UAAUE,IAAI,UACzBwC,EAAI7B,SAASmC,EAAW3C,MACxBsC,EAAQM,KAAKD,EAAW3C,QAgB1B,OATA2B,aAAaM,QAFc,aAI1BJ,KAAKK,UAAU,CACdlC,KAAMqC,EAAIvC,SACVvD,OAAQA,KAIViG,EAAW7C,UAAUC,OAAO,UACpBrD,GAEP,IAAK,YACJ8F,EAAI9C,MAAM,QACV,MACD,IAAK,cACJ8C,EAAI9C,MAAM,UACV,MACD,IAAK,aACJ8C,EAAI9C,MAAM,SACV,MAED,IAAK,YACJ8C,EAAIvB,YACJ,MACD,IAAK,eACJuB,EAAIrB,eACJ,MAED,IAAK,YACJqB,EAAIhB,YACJ,MACD,IAAK,eACJgB,EAAIpB,eACJ,MACD,IAAK,aACQ4B,QAAQ,oCAEnBR,EAAI7B,SAAS8B,EAAQd,cAEtB,MACD,QACCsB,QAAQC,IAAI,oBAEdT,EAAQM,KAAKP,EAAIvC,SAClB,EAKD,CCxEA,MAAMkD,EAAa,CAClBhD,KAAM,CACL,CAAC,oBAAqB,eACtB,CAAC,GAAI,IACL,CAAC,GAAI,IACL,CAAC,GAAI,KAENC,UAAW,CAAC,KAAM,KAAM,KAAM,OAQxB,SAASgD,EAAenG,EAAQkG,GACtC,IAAIE,EAAW,GAEf,IAAK,IAAI3F,EAAW,EAAGA,EAAWT,EAAMkD,KAAKvB,OAAQlB,IAAY,CAChE,IAAI4F,EAAOrG,EAAMkD,KAAKzC,GACtB,IAAK,IAAIC,EAAc,EAAGA,EAAc2F,EAAK1E,OAAQjB,IAAe,CACnE,IAAI4C,EAAO+C,EAAK3F,GACZ4F,EAAkBtG,EAAMoD,YAAY1C,GAAe4C,EAAK3B,OAKxDc,EAAQzC,EAAMmD,UAAUzC,GAC5B,GAAa,QAAT+B,EACC6D,EAAkB,IACrBhD,GAAQ,IAAIiD,OAAOD,IAEpBF,GAAY,KAAK9C,UACX,GAAa,SAATb,EACN6D,EAAkB,IACrBhD,EAAO,IAAIiD,OAAOD,GAAmBhD,GAEtC8C,GAAY,KAAK9C,SACX,CACN,IAAIkD,EAAcC,KAAKC,MAAMJ,EAAkB,GAC3CK,EAAeL,EAAkBE,EACjCA,EAAc,IACjBlD,EAAO,IAAIiD,OAAOC,GAAelD,GAE9BqD,EAAe,IAClBrD,GAAQ,IAAIiD,OAAOI,IAEpBP,GAAY,KAAK9C,IAClB,CACD,CAEA,GADA8C,GAAY,MACI,GAAZ3F,EAAe,CAClB,IAAK,IAAImG,EAAc,EAAGA,EAAcP,EAAK1E,OAAQiF,IAAe,CACnE,IAAIC,EAAQ7G,EAAMmD,UAAUyD,GAE5B,GAAa,QAATC,EAAiB,CAEpBT,GAAY,KADA,IAAIG,OAAOvG,EAAMoD,YAAYwD,MAE1C,MAAO,GAAa,SAATC,EAAkB,CAE5BT,GAAY,IADA,IAAIG,OAAOvG,EAAMoD,YAAYwD,GAAe,KAEzD,MAAO,GAAa,UAATC,EAAmB,CAE7BT,GAAY,KADA,IAAIG,OAAOvG,EAAMoD,YAAYwD,MAE1C,KAAO,CAENR,GAAY,IADA,IAAIG,OAAOvG,EAAMoD,YAAYwD,GAAe,IAEzD,CACD,CACAR,GAAY,KACb,CACD,CACA,OAAOA,CACR,CCzEA,SAASU,EAAEC,GACV,OAAOA,EAAOC,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAAU,IAC7D,CAEO,SAASC,EAAWC,GAC1B,IAAIC,EAAO,GACX,IAAK,IAAI1F,KAAOyF,EAAUhE,KAAM,CAC/BiE,GAAQL,EAAE,QACV,IAAK,IAAIzF,KAAQI,EAChB0F,GAAQ,KAAOL,EAAE,OAAOzF,UAEzB8F,GAAQL,EAAE,QACX,CACA,OAAOK,CACR,CCXO,SAASC,EAAgB7B,EAAKC,GACpC,OAAO,SAAkB6B,GACxB,IAAIH,EAAY3B,EAAIvC,SACpBwC,EAAQM,KAAKoB,GACb,IAAII,EAAkBrH,SAASC,eAAe,aAC9C,OAAQmH,GACP,IAAK,WACJC,EAAgBxG,aAAa,SAAU,YACvCwG,EAAgB3D,UAAYwC,EAAee,GAC3C,MACD,IAAK,OACJI,EAAgBxG,aAAa,SAAU,QACvCwG,EAAgB3D,UAAYsD,EAAWC,GACvC,MACD,IAAK,OACJI,EAAgBxG,aAAa,SAAU,QACvCwG,EAAgB3D,UAAYoB,KAAKK,UAAU8B,EAAW,KAAM,GAC5D,MACD,QACClB,QAAQC,IAAI,oBAEf,CACD,CCvBA,IAAIsB,ECMG,SAAkBC,EAAY/C,EAAiBC,GACrD,IAAIa,EAAMzF,EAAS0H,GACfhC,EAAUhB,EAAaC,EAAiBC,GACxC+C,EAAWnC,EAAcC,EAAKC,GAASC,OACvCiC,EAAWN,EAAgB7B,EAAKC,GAOpC,OAFAD,EAAI7B,SAAS8B,EAAQmC,KAAKjD,IAEnB,CACNe,OAAQgC,EACRC,SAAUA,EAEZ,CDrBY,CAAS,QAAS,YAAa,CAC1CxE,KAAM,CACL,CAAC,oBAAqB,GAAI,GAAI,IAC9B,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,KAEdC,UAAW,KAGRyE,EAAgB3H,SAASC,eAAe,kBACxC2H,EAAmB5H,SAASC,eAAe,sBAC3C4H,EAAe7H,SAASC,eAAe,SAE3C,SAAS6H,EAAc/G,GAEtB,KADwC,UAA1BA,EAAMC,OAAO+G,UACb,OACd,IACIC,EADYhI,SAASC,eAAe,aACjBuD,aAAa,WAAa,WACjD8D,EAAMG,SAASO,EAChB,CAIAL,EAAc7G,iBAAiB,SAAS,SAAUC,GAEjD,KADyC,WAA1BA,EAAMC,OAAO+G,UACb,OACf,IAAIP,EAAWzG,EAAMC,OAAOwC,aAAa,YAEzC,GAAIgE,EACH,OAAOF,EAAM9B,OAAOgC,GAErB,IAAIJ,EAAarG,EAAMC,OAAOwC,aAAa,cAC3C,OAAI4D,EACIE,EAAMG,SAASL,QADvB,CAGD,IAEAQ,EAAiB9G,iBAAiB,UAAU,SAAUC,GACV,UAA1BA,EAAMC,OAAO+G,WAEPhH,EAAMC,OAAOiH,SAEnClC,QAAQC,IAAI,sBACZ6B,EAAa/G,iBAAiB,QAASgH,KAEvC/B,QAAQC,IAAI,6BACZ6B,EAAaK,oBAAoB,QAASJ,IAE5C","sources":["src/concerns/table/dom.js","src/concerns/table/storage.js","src/concerns/table/last-action-storage.js","src/concerns/table/mutation.js","src/concerns/table/formats/markdown.js","src/concerns/table/formats/html.js","src/concerns/table/generation.js","src/app.js","src/concerns/table/index.js"],"sourcesContent":["/**\n * Creates a state object.\n */\nfunction useState(defaultValue = defaultState) {\n\tlet value = defaultValue;\n\n\tfunction getValue() {\n\t\treturn value;\n\t}\n\n\tfunction setValue(newValue) {\n\t\tvalue = newValue;\n\t}\n\n\treturn [getValue, setValue];\n}\n\n/**\n * Creates a reducer.\n * @param {function} reducer - The reducer function.\n * @param {any} initialState - The initial state.\n * @returns {any[]} The state and dispatch function.\n */\nfunction useReducer(reducer, initialState) {\n\tlet [state, setState] = useState(initialState);\n\n\tfunction dispatch(action) {\n\t\tsetState(reducer(state(), action));\n\t}\n\n\treturn [state, dispatch];\n}\n\nfunction tableStateReducer(state, action) {\n\tswitch (action.type) {\n\t\tcase 'setActiveRow':\n\t\t\treturn { ...state, R: action.value };\n\t\tcase 'setActiveColumn':\n\t\t\treturn { ...state, C: action.value };\n\t\tcase 'reset':\n\t\t\treturn defaultState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n/**\n * Functions for creating and manipulating the table DOM.\n * @param {string} tableId\n * @returns\n */\nexport function TableDom(tableId) {\n\tlet table = document.getElementById(tableId);\n\tlet initialState = { R: 0, C: 0 };\n\n\tlet [tableState, updateTableState] = useReducer(tableStateReducer, initialState);\n\n\ttable.addEventListener('keydown', function (event) {\n\t\t// console.log(event);\n\t\t// If the enter key is pressed, focus next row.\n\t\tif (event.key === 'Enter') {\n\t\t\tevent.preventDefault();\n\t\t\tlet target = event.target;\n\t\t\tif (target.tagName === 'INPUT') {\n\t\t\t\tlet row = target.parentElement.parentElement;\n\t\t\t\tlet nextRow = row.nextElementSibling;\n\n\t\t\t\tif (nextRow) {\n\t\t\t\t\t// If there is a next row, focus the next input.\n\t\t\t\t\tlet nextInput = nextRow.children[target.parentElement.cellIndex].children[0];\n\t\t\t\t\tnextInput.focus();\n\t\t\t\t\tnextInput.select();\n\t\t\t\t} else {\n\t\t\t\t\t// let columnAlignment = tableState().C;\n\t\t\t\t\t// If no next row, create a new row and focus the next input.\n\t\t\t\t\tlet table = target.parentElement.parentElement.parentElement;\n\t\t\t\t\tlet newRowData = Array(row.children.length).fill('');\n\t\t\t\t\tlet newRow = createRow(newRowData);\n\t\t\t\t\ttable.appendChild(newRow);\n\t\t\t\t\tlet nextInput = newRow.children[target.parentElement.cellIndex].children[0];\n\t\t\t\t\tnextInput.focus();\n\t\t\t\t\tnextInput.select();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t/**\n\t * Creates a new input element.\n\t * @param {string} value - The value to populate the input with.\n\t */\n\tfunction createInput(value) {\n\t\tlet input = document.createElement('input');\n\t\tfunction updateSelection(rowIndex, columnIndex) {\n\t\t\t// Update table state\n\t\t\tupdateTableState({ type: 'setActiveRow', value: rowIndex });\n\t\t\tupdateTableState({ type: 'setActiveColumn', value: columnIndex });\n\t\t\t// Update selected attribute\n\t\t\tlet prevInput = document.querySelector(`[selected]`);\n\t\t\tif (prevInput) {\n\t\t\t\tprevInput.removeAttribute('selected');\n\t\t\t}\n\t\t\tinput.setAttribute('selected', 'true');\n\t\t}\n\n\t\tinput.addEventListener('focus', function (event) {\n\t\t\tlet columnIndex = event.target.parentElement.cellIndex;\n\t\t\tlet rowIndex = event.target.parentElement.parentElement.rowIndex;\n\t\t\tupdateSelection(rowIndex, columnIndex);\n\t\t});\n\n\t\tinput.addEventListener('click', function (event) {\n\t\t\tlet columnIndex = event.target.parentElement.cellIndex;\n\t\t\tlet rowIndex = event.target.parentElement.parentElement.rowIndex;\n\t\t\tupdateSelection(rowIndex, columnIndex);\n\t\t});\n\n\t\t// input.onclick = function (event) {\n\t\t// \tlet columnIndex = event.target.parentElement.cellIndex;\n\t\t// \tlet rowIndex = event.target.parentElement.parentElement.rowIndex;\n\t\t// \tupdateSelection(rowIndex, columnIndex);\n\t\t// };\n\t\tinput.value = value;\n\t\treturn input;\n\t}\n\n\tfunction createCell(value) {\n\t\tlet cell = document.createElement('td');\n\t\tcell.appendChild(createInput(value));\n\t\treturn cell;\n\t}\n\n\t/**\n\t * Creates a new table row and adds it to the current row.\n\t * @param {string[]} values - The column values to populate the row with.\n\t */\n\tfunction createRow(values) {\n\t\tlet row = document.createElement('tr');\n\t\tfor (let colIndex = 0; colIndex < values.length; colIndex++) {\n\t\t\trow.appendChild(createCell(values[colIndex]));\n\t\t}\n\t\treturn row;\n\t}\n\n\t/**\n\t * Renders a table from an array of rows.\n\t * @param {string[][]} rows - The rows to render.\n\t */\n\tfunction renderTable(rows) {\n\t\tlet table = document.getElementById('table');\n\t\tfor (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n\t\t\ttable.appendChild(createRow(rows[rowIndex]));\n\t\t}\n\t}\n\n\tfunction fromJson(json) {\n\t\tlet table = document.getElementById(tableId);\n\t\ttable.innerHTML = '';\n\t\tfor (let i = 0; i < json.data.length; i++) {\n\t\t\tlet row = json.data[i];\n\t\t\tlet rowElement = document.createElement('tr');\n\t\t\t// let rowAlignmentDirection = json.alignment[i];\n\t\t\tfor (let columnIndex = 0; columnIndex < row.length; columnIndex++) {\n\t\t\t\tlet cell = document.createElement('td');\n\t\t\t\tlet input = createInput(row[columnIndex]);\n\t\t\t\tlet colAlignmentDirection = json.alignment[columnIndex] ?? 'left';\n\t\t\t\tinput.setAttribute('align', colAlignmentDirection);\n\t\t\t\tinput.classList.add(`text-${colAlignmentDirection}`);\n\t\t\t\tcell.appendChild(input);\n\t\t\t\trowElement.appendChild(cell);\n\t\t\t}\n\n\t\t\ttable.appendChild(rowElement);\n\t\t}\n\t}\n\n\t/**\n\t * Converts the table to JSON.\n\t * @returns {string} - The JSON representation of the table.\n\t */\n\tfunction toJson() {\n\t\tlet table = document.getElementById(tableId);\n\t\tlet rows = table.rows;\n\t\tlet columnMinWidth = 3;\n\t\tlet json = {\n\t\t\tdata: [],\n\t\t\t// Column alignment\n\t\t\talignment: [],\n\t\t\tcolMaxChars: []\n\t\t};\n\t\tfor (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n\t\t\tlet row = rows[rowIndex];\n\t\t\tlet rowArray = [];\n\n\t\t\tfor (let columnIndex = 0; columnIndex < row.cells.length; columnIndex++) {\n\t\t\t\tlet cell = row.cells[columnIndex];\n\t\t\t\tlet input = cell.children[0];\n\t\t\t\tlet text = input.value;\n\t\t\t\tlet textLength = text.length > columnMinWidth ? text.length : columnMinWidth;\n\t\t\t\tcolMaxChars = json.colMaxChars[columnIndex] || columnMinWidth;\n\n\t\t\t\tif (textLength > colMaxChars) {\n\t\t\t\t\tjson.colMaxChars[columnIndex] = textLength;\n\t\t\t\t}\n\n\t\t\t\trowArray.push(text);\n\t\t\t\tif (rowIndex === 0) {\n\t\t\t\t\tjson.alignment.push(input.getAttribute('align') ?? 'left');\n\t\t\t\t}\n\t\t\t}\n\t\t\tjson.data.push(rowArray);\n\t\t}\n\t\treturn json;\n\t\t// let cols = rows[0].cells;\n\n\t\t// let json = [];\n\t\t// for (let i = 0; i < rows.length; i++) {\n\t\t// \tlet row = {};\n\t\t// \tfor (let j = 0; j < cols.length; j++) {\n\t\t// \t\tlet cell = rows[i].cells[j];\n\t\t// \t\tlet input = cell.children[0];\n\t\t// \t\tlet text = input.value;\n\t\t// \t\tlet align = input.getAttribute('align');\n\t\t// \t\trow[cols[j].innerText] = text;\n\t\t// \t}\n\t\t// \tjson.push(row);\n\t\t// }\n\t\t// return json;\n\t}\n\n\t/**\n\t * Aligns text in the current column.\n\t * @param {string} direction - The direction to align the text (left, right, center).\n\t */\n\tfunction align(direction) {\n\t\tlet table = document.getElementById(tableId);\n\t\tlet C = tableState().C;\n\t\t// get all row columns at the columnIndex\n\t\tfor (let rowIndex = 0; rowIndex < table.rows.length; rowIndex++) {\n\t\t\tlet row = table.rows[rowIndex];\n\t\t\tlet cell = row.cells[C];\n\t\t\tlet input = cell.children[0];\n\t\t\tinput.setAttribute('align', direction);\n\t\t\tinput.classList.remove('text-left');\n\t\t\tinput.classList.remove('text-right');\n\t\t\tinput.classList.remove('text-center');\n\t\t\tinput.classList.add(`text-${direction}`);\n\t\t}\n\t}\n\n\tfunction insertRow() {\n\t\tlet table = document.getElementById(tableId);\n\t\tlet row = table.rows[tableState().R];\n\t\tlet newRow = createRow(Array(row.children.length).fill(''));\n\t\ttable.insertBefore(newRow, row);\n\t}\n\n\tfunction insertColumn() {\n\t\t// Insert a new column at the current column index for every row\n\t\tlet table = document.getElementById(tableId);\n\t\tlet C = tableState().C;\n\t\tfor (let rowIndex = 0; rowIndex < table.rows.length; rowIndex++) {\n\t\t\tlet row = table.rows[rowIndex];\n\t\t\tlet cell = createCell('');\n\t\t\trow.insertBefore(cell, row.children[C]);\n\t\t}\n\n\t\t// let table = document.getElementById(tableId);\n\t\t// let row = table.rows[tableState().R];\n\t\t// let newCell = createCell('');\n\t\t// row.insertBefore(newCell, row.children[tableState().C]);\n\t}\n\n\tfunction deleteRow() {\n\t\tlet table = document.getElementById(tableId);\n\t\t// Do not delete the last row\n\t\tif (table.rows.length === 1) {\n\t\t\treturn;\n\t\t}\n\t\tlet t = tableState();\n\t\ttable.deleteRow(t.R);\n\t\t// Focus on the next row\n\t\t// If the last row is deleted, focus on the previous row\n\t\tif (t.R >= table.rows.length) {\n\t\t\tt.R--;\n\t\t}\n\t\tlet focusOn = table.rows[t.R].cells[t.C].children[0];\n\t\tfocusOn.focus();\n\t\tfocusOn.select();\n\t}\n\n\tfunction deleteColumn() {\n\t\tlet table = document.getElementById(tableId);\n\t\t// Do not delete the last column\n\t\tif (table.rows[0].cells.length === 1) {\n\t\t\treturn;\n\t\t}\n\t\tlet t = tableState();\n\t\tfor (let rowIndex = 0; rowIndex < table.rows.length; rowIndex++) {\n\t\t\tlet row = table.rows[rowIndex];\n\t\t\trow.deleteCell(t.C);\n\t\t}\n\t\t// Focus on the next column\n\t\t// If the last column is deleted, focus on the previous column\n\t\tif (t.C >= table.rows[0].cells.length) {\n\t\t\tt.C--;\n\t\t}\n\t\tlet focusOn = table.rows[t.R].cells[t.C].children[0];\n\t\tfocusOn.focus();\n\t\tfocusOn.select();\n\t}\n\n\treturn {\n\t\talign: align,\n\t\tcreateRow: createRow,\n\t\ttoJson: toJson,\n\t\tfromJson: fromJson,\n\t\trenderTable: renderTable,\n\t\tinsertRow: insertRow,\n\t\tinsertColumn: insertColumn,\n\t\tdeleteColumn: deleteColumn,\n\t\tdeleteRow: deleteRow,\n\t\ttableState: tableState\n\t};\n}\n","/**\n * Creates a table storage object.\n * @param {string} localStorageKey - The key to use for local storage.\n * @returns {object} The table storage object.\n * @property {function} load - Loads table data from local storage.\n * @property {function} destroy - Removes table data from local storage.\n * @property {function} save - Saves the table data to local storage.\n */\nexport function TableStorage(\n\tlocalStorageKey = 'tableData',\n\tdefaultTable = { data: [], alignment: [] }\n) {\n\t/**\n\t * Loads table data from local storage.\n\t * @param {*} fallbackTable - The table to use if no data is found in local storage.\n\t * @returns {*} The table data in JSON.\n\t */\n\tfunction load(fallbackTable = defaultTable) {\n\t\tlet storedTable = localStorage.getItem(localStorageKey);\n\t\tif (storedTable) {\n\t\t\treturn JSON.parse(storedTable);\n\t\t} else {\n\t\t\treturn { data: fallbackTable.data, alignment: fallbackTable.alignment };\n\t\t}\n\t}\n\n\t/**\n\t * Removes table data from local storage.\n\t */\n\tfunction destroy() {\n\t\tlocalStorage.removeItem(localStorageKey);\n\t}\n\n\t/**\n\t * Saves the table data to local storage.\n\t * @param {*} tableData - The JSON table data to save.\n\t */\n\tfunction save(tableData) {\n\t\tlocalStorage.setItem(localStorageKey, JSON.stringify(tableData));\n\t}\n\n\treturn {\n\t\tload,\n\t\tdestroy,\n\t\tsave,\n\t\tdefaultTable\n\t};\n}\n","let lastActionStorageKey = 'lastAction';\n\n/**\n * @returns {object} save, load\n */\nexport function useLastActionStorage() {\n\t/**\n\t * @param {*} data\n\t */\n\tfunction setLastAction(data) {\n\t\tlocalStorage.setItem(lastActionStorageKey, JSON.stringify(data));\n\t}\n\n\t/**\n\t * @returns {object} lastAction\n\t */\n\tfunction getLastAction() {\n\t\tlet lastAction = JSON.parse(localStorage.getItem(lastActionStorageKey));\n\t\tif (!lastAction) {\n\t\t\tlastAction = [];\n\t\t}\n\t\treturn lastAction;\n\t}\n\n\treturn [getLastAction, setLastAction];\n}\n\n// function historyStorage() {\n// \tlet historyStorageKey = 'history';\n\n// \tfunction save(data) {\n// \t\tlet history = JSON.parse(localStorage.getItem(historyStorageKey));\n// \t\tif (!history) {\n// \t\t\thistory = [];\n// \t\t}\n// \t\thistory.push(data);\n// \t\tlocalStorage.setItem(historyStorageKey, JSON.stringify(history));\n// \t}\n\n// \tfunction load() {\n// \t\tlet history = JSON.parse(localStorage.getItem(historyStorageKey));\n// \t\tif (!history) {\n// \t\t\thistory = [];\n// \t\t}\n// \t\treturn history;\n// \t}\n// }\n","import { useLastActionStorage } from './last-action-storage.js';\n\nexport function TableMutation(dom, storage) {\n\t/**\n\t * A reducer function to handle saving last dom mutation action to local storage.\n\t * @param {string} action\n\t */\n\tfunction mutate(action) {\n\t\tlet undoButton = document.getElementById('undoButton');\n\t\tlet [getLastAction, setLastAction] = useLastActionStorage();\n\t\tlet lastAction = getLastAction();\n\t\t// Undo uses the last action saved to local storage, so we don't want to overwrite it.\n\t\tif (action === 'undo') {\n\t\t\tif (lastAction) {\n\t\t\t\tundoButton.classList.add('hidden');\n\t\t\t\tdom.fromJson(lastAction.data);\n\t\t\t\tstorage.save(lastAction.data);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tlet lastActionStorageKey = 'lastAction';\n\t\t// Get table data and save to local storage before performing action.\n\t\tlocalStorage.setItem(\n\t\t\tlastActionStorageKey,\n\t\t\tJSON.stringify({\n\t\t\t\tdata: dom.toJson(),\n\t\t\t\taction: action\n\t\t\t})\n\t\t);\n\n\t\tundoButton.classList.remove('hidden');\n\t\tswitch (action) {\n\t\t\t// Alignment\n\t\t\tcase 'alignLeft':\n\t\t\t\tdom.align('left');\n\t\t\t\tbreak;\n\t\t\tcase 'alignCenter':\n\t\t\t\tdom.align('center');\n\t\t\t\tbreak;\n\t\t\tcase 'alignRight':\n\t\t\t\tdom.align('right');\n\t\t\t\tbreak;\n\t\t\t// Insert\n\t\t\tcase 'insertRow':\n\t\t\t\tdom.insertRow();\n\t\t\t\tbreak;\n\t\t\tcase 'insertColumn':\n\t\t\t\tdom.insertColumn();\n\t\t\t\tbreak;\n\t\t\t// Delete\n\t\t\tcase 'deleteRow':\n\t\t\t\tdom.deleteRow();\n\t\t\t\tbreak;\n\t\t\tcase 'deleteColumn':\n\t\t\t\tdom.deleteColumn();\n\t\t\t\tbreak;\n\t\t\tcase 'resetTable':\n\t\t\t\tlet reset = confirm('Are you sure you want to clear?');\n\t\t\t\tif (reset) {\n\t\t\t\t\tdom.fromJson(storage.defaultTable);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Action not found');\n\t\t}\n\t\tstorage.save(dom.toJson());\n\t}\n\n\treturn {\n\t\tmutate: mutate\n\t};\n}\n","const testObject = {\n\tdata: [\n\t\t['Let’s get table’n', 'Persist me!'],\n\t\t['', ''],\n\t\t['', ''],\n\t\t['', '']\n\t],\n\talignment: [null, null, null, null]\n};\n\n/**\n * Generate markdown table in compact format.\n * @param {*} table - The table data to convert to markdown.\n * @returns {string} The markdown table.\n */\nexport function markdownFormat(table = testObject) {\n\tlet markdown = '';\n\n\tfor (let rowIndex = 0; rowIndex < table.data.length; rowIndex++) {\n\t\tlet cols = table.data[rowIndex];\n\t\tfor (let columnIndex = 0; columnIndex < cols.length; columnIndex++) {\n\t\t\tlet text = cols[columnIndex];\n\t\t\tlet paddingRequired = table.colMaxChars[columnIndex] - text.length;\n\t\t\t// if (paddingRequired > 0) {\n\t\t\t// \ttext += ' '.repeat(paddingRequired);\n\t\t\t// }\n\t\t\t// markdown += `| ${text} `;\n\t\t\tlet align = table.alignment[columnIndex];\n\t\t\tif (align == 'left') {\n\t\t\t\tif (paddingRequired > 0) {\n\t\t\t\t\ttext += ' '.repeat(paddingRequired);\n\t\t\t\t}\n\t\t\t\tmarkdown += `| ${text} `;\n\t\t\t} else if (align == 'right') {\n\t\t\t\tif (paddingRequired > 0) {\n\t\t\t\t\ttext = ' '.repeat(paddingRequired) + text;\n\t\t\t\t}\n\t\t\t\tmarkdown += `| ${text} `;\n\t\t\t} else {\n\t\t\t\tlet leftPadding = Math.floor(paddingRequired / 2);\n\t\t\t\tlet rightPadding = paddingRequired - leftPadding;\n\t\t\t\tif (leftPadding > 0) {\n\t\t\t\t\ttext = ' '.repeat(leftPadding) + text;\n\t\t\t\t}\n\t\t\t\tif (rightPadding > 0) {\n\t\t\t\t\ttext += ' '.repeat(rightPadding);\n\t\t\t\t}\n\t\t\t\tmarkdown += `| ${text} `;\n\t\t\t}\n\t\t}\n\t\tmarkdown += '|\\n';\n\t\tif (rowIndex == 0) {\n\t\t\tfor (let columnIndex = 0; columnIndex < cols.length; columnIndex++) {\n\t\t\t\tlet align = table.alignment[columnIndex];\n\n\t\t\t\tif (align == 'left') {\n\t\t\t\t\tlet lines = '-'.repeat(table.colMaxChars[columnIndex]);\n\t\t\t\t\tmarkdown += `|:${lines}:`;\n\t\t\t\t} else if (align == 'right') {\n\t\t\t\t\tlet lines = '-'.repeat(table.colMaxChars[columnIndex] + 1);\n\t\t\t\t\tmarkdown += `|${lines}:`;\n\t\t\t\t} else if (align == 'center') {\n\t\t\t\t\tlet lines = '-'.repeat(table.colMaxChars[columnIndex]);\n\t\t\t\t\tmarkdown += `|:${lines}:`;\n\t\t\t\t} else {\n\t\t\t\t\tlet lines = '-'.repeat(table.colMaxChars[columnIndex] + 2);\n\t\t\t\t\tmarkdown += `|${lines}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmarkdown += '|\\n';\n\t\t}\n\t}\n\treturn markdown;\n}\n\nfunction getCompact() {\n\tlet table = document.getElementById('table');\n\tlet rows = table.rows;\n\tlet cols = rows[0].cells;\n\tlet markdown = '';\n\tfor (let i = 0; i < rows.length; i++) {\n\t\tfor (let j = 0; j < cols.length; j++) {\n\t\t\tlet cell = rows[i].cells[j];\n\t\t\tlet input = cell.children[0];\n\t\t\tlet text = input.value;\n\t\t\tlet align = input.getAttribute('align');\n\t\t\tif (align == 'left') {\n\t\t\t\tmarkdown += `| ${text}`;\n\t\t\t} else if (align == 'right') {\n\t\t\t\tmarkdown += `| ${text} `;\n\t\t\t} else {\n\t\t\t\tmarkdown += `| ${text} `;\n\t\t\t}\n\t\t}\n\t\tmarkdown += '|\\n';\n\t}\n\tconsole.log(markdown);\n}\n","function h(string) {\n\treturn string.replace(/</g, '&lt;').replace(/>/g, '&gt;') + '\\n';\n}\n\nexport function htmlFormat(tableJson) {\n\tlet html = '';\n\tfor (let row of tableJson.data) {\n\t\thtml += h('<tr>');\n\t\tfor (let cell of row) {\n\t\t\thtml += '\\t' + h(`<td>${cell}</td>`);\n\t\t}\n\t\thtml += h('</tr>');\n\t}\n\treturn html;\n}\n","import { markdownFormat } from './formats/markdown.js';\nimport { htmlFormat } from './formats/html.js';\n\nexport function TableGeneration(dom, storage) {\n\treturn function generate(generation) {\n\t\tlet tableJson = dom.toJson();\n\t\tstorage.save(tableJson);\n\t\tlet generateElement = document.getElementById('generated');\n\t\tswitch (generation) {\n\t\t\tcase 'markdown':\n\t\t\t\tgenerateElement.setAttribute('format', 'markdown');\n\t\t\t\tgenerateElement.innerHTML = markdownFormat(tableJson);\n\t\t\t\tbreak;\n\t\t\tcase 'html':\n\t\t\t\tgenerateElement.setAttribute('format', 'html');\n\t\t\t\tgenerateElement.innerHTML = htmlFormat(tableJson);\n\t\t\t\tbreak;\n\t\t\tcase 'json':\n\t\t\t\tgenerateElement.setAttribute('format', 'json');\n\t\t\t\tgenerateElement.innerHTML = JSON.stringify(tableJson, null, 2);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('Action not found');\n\t\t}\n\t};\n}\n","import { NewTable } from './concerns/table';\n\nlet table = NewTable('table', 'tableData', {\n\tdata: [\n\t\t['Let’s get table’n', '', '', ''],\n\t\t['', '', '', ''],\n\t\t['', '', '', ''],\n\t\t['', '', '', '']\n\t],\n\talignment: []\n});\n\nlet tableControls = document.getElementById('table-controls');\nlet generateOnChange = document.getElementById('generate-on-change');\nlet tableElement = document.getElementById('table');\n\nfunction inputListener(event) {\n\tlet isInput = event.target.nodeName === 'INPUT';\n\tif (!isInput) return;\n\tlet generated = document.getElementById('generated');\n\tlet format = generated.getAttribute('format') ?? 'markdown';\n\ttable.generate(format);\n}\n\n// remove event listener from table element\n\ntableControls.addEventListener('click', function (event) {\n\tlet isButton = event.target.nodeName === 'BUTTON';\n\tif (!isButton) return;\n\tlet mutation = event.target.getAttribute('mutation');\n\n\tif (mutation) {\n\t\treturn table.mutate(mutation);\n\t}\n\tlet generation = event.target.getAttribute('generation');\n\tif (generation) {\n\t\treturn table.generate(generation);\n\t}\n});\n\ngenerateOnChange.addEventListener('change', function (event) {\n\tlet isCheckbox = event.target.nodeName === 'INPUT';\n\tif (!isCheckbox) return;\n\tlet generateOnChange = event.target.checked;\n\tif (generateOnChange) {\n\t\tconsole.log('generate on change');\n\t\ttableElement.addEventListener('input', inputListener);\n\t} else {\n\t\tconsole.log('do not generate on change');\n\t\ttableElement.removeEventListener('input', inputListener);\n\t}\n});\n","import { TableDom } from './dom.js';\nimport { TableStorage } from './storage.js';\nimport { TableMutation } from './mutation.js';\nimport { TableGeneration } from './generation.js';\n\n// button event listener -> mutation -> dom -> storage\n// button event listener -> format -> dom -> storage\n\nexport function NewTable(tableDomId, localStorageKey, defaultTable) {\n\tlet dom = TableDom(tableDomId);\n\tlet storage = TableStorage(localStorageKey, defaultTable);\n\tlet mutation = TableMutation(dom, storage).mutate;\n\tlet generate = TableGeneration(dom, storage);\n\n\t/**\n\t * Load table data from local storage.\n\t */\n\tdom.fromJson(storage.load(defaultTable));\n\n\treturn {\n\t\tmutate: mutation,\n\t\tgenerate: generate\n\t};\n}\n"],"names":["$4dc44495afdaef08$var$useReducer","reducer","initialState","state","setState","defaultValue","defaultState","value","newValue","$4dc44495afdaef08$var$useState","action","$4dc44495afdaef08$var$tableStateReducer","type","R","C","$4dc44495afdaef08$export$71700b0ee10cf639","tableId","table","document","getElementById","tableState","updateTableState","createInput","input","createElement","updateSelection","rowIndex","columnIndex","prevInput","querySelector","removeAttribute","setAttribute","addEventListener","event","target","parentElement","cellIndex","createCell","cell","appendChild","createRow","values","row","colIndex","length","key","preventDefault","tagName","nextRow","nextElementSibling","nextInput","children","focus","select","newRow","Array","fill","nextInput1","align","direction","rows","cells","classList","remove","add","toJson","json","data","alignment","colMaxChars","rowArray","text","textLength","push","getAttribute","fromJson","innerHTML","i","rowElement","colAlignmentDirection","renderTable","insertRow","insertBefore","insertColumn","deleteColumn","t","deleteCell","focusOn","deleteRow","$4d7a4107e596d445$export$c030ffc896aa1ecb","localStorageKey","defaultTable","fallbackTable","storedTable","localStorage","getItem","JSON","parse","removeItem","tableData","setItem","stringify","$61e26d03ee3f498c$var$lastActionStorageKey","$f21bdb555e7c7ef7$export$d89f814325b8829e","dom","storage","mutate","undoButton","getLastAction","setLastAction","lastAction","save","confirm","console","log","$2aa9da2aa6da1556$var$testObject","$2aa9da2aa6da1556$export$cac3c8052ca02182","markdown","cols","paddingRequired","repeat","leftPadding","Math","floor","rightPadding","columnIndex1","align1","$9d6b81cd51bf83c1$var$h","string","replace","$9d6b81cd51bf83c1$export$acb80b3cf1a39633","tableJson","html","$f0cb54aad751d1f3$export$61e91f9951856c4c","generation","generateElement","$e73bf42412feb220$var$table","tableDomId","mutation","generate","load","$e73bf42412feb220$var$tableControls","$e73bf42412feb220$var$generateOnChange","$e73bf42412feb220$var$tableElement","$e73bf42412feb220$var$inputListener","nodeName","format","checked","removeEventListener"],"version":3,"file":"index.ff8c1c5d.js.map"}